services:
  fast-mcp-telegram:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: runtime
    env_file:
      - ./.env
    environment:
      - MCP_TRANSPORT=http
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8000
      - SESSION_NAME=sessions/mcp_telegram.session
      - DOMAIN=${DOMAIN:-your-domain.com}
    volumes:
      - ./src:/app/src
      - ./sessions:/app/sessions
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fast-mcp-telegram.rule=Host(`${DOMAIN:-your-domain.com}`)"
      - "traefik.http.routers.fast-mcp-telegram.entrypoints=websecure"
      - "traefik.http.services.fast-mcp-telegram.loadbalancer.server.port=8000"
      - "traefik.http.routers.fast-mcp-telegram.tls.certresolver=letsencrypt"
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -sS -o /dev/null http://localhost:8000 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: always
    command: python -m src.server

  setup:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: runtime
    env_file:
      - ./.env
    environment:
      - SESSION_NAME=sessions/mcp_telegram.session
    volumes:
      - ./src:/app/src
      - ./sessions:/app/sessions
    profiles:
      - setup
    command: python -m src.setup_telegram --overwrite

networks:
  traefik-public:
    external: true


